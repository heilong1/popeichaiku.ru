    for (int i=1; i<=10; i++)
    {
        for (int j=0; j<10; j++)
        {
        System.out.print( array[j] * i + " ");
        }
        System.out.println();
    }
------------------------------------------------------------------------------------------------
    public static void main(String[] args)
    {
        Xtring(1);
        Xtring(2);
        Xtring(3);
        Xtring(4);
        Xtring(5);
        Xtring(6);
        Xtring(7);
        Xtring(8);
        Xtring(9);
        Xtring(10);
    }
    
    public static void Xtring(int x)
    {
        System.out.print(x*1+" ");
        System.out.print(x*2+" ");
        System.out.print(x*3+" ");
        System.out.print(x*4+" ");
        System.out.print(x*5+" ");
        System.out.print(x*6+" ");
        System.out.print(x*7+" ");
        System.out.print(x*8+" ");
        System.out.print(x*9+" ");
        System.out.println(x*10+" ");
    }
------------------------------------------------------------------------------------------------
	    public static void main(String[] args)
    {

        Red red1 = new Red();
        Orange orange1 = new Orange();
        Yellow yellow1 = new Yellow();
        Green green1 = new Green();
        Blue blue1 = new Blue();
        Indigo indigo1 = new Indigo();
        Violet violet1 = new Violet();

    }

    public static class Red
    {
        public Red() {
            System.out.println("Red");
        }
    }
------------------------------------------------------------------------------------------------	
	
	public static void main(String[] args)
    {
        Xtring("blin");
    }
    
    public static void Xtring(String x)
    {
        System.out.print(x+" ");
    }
------------------------------------------------------------------------------------------------	
	
BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
String sAge = reader.readLine();
String name = reader.readLine();
int nAge = Integer.parseInt(sAge);
System.out.print((name) + " захватит мир через " + (nAge) + " лет. Му-ха-ха!");
	
------------------------------------------------------------------------------------------------
package com.javarush.test.level05.lesson05.task05;

/* Провести три боя  попарно между котами
Создать три кота используя класс Cat.
Провести три боя попарно между котами.
Класс Cat создавать не надо. Для боя использовать метод boolean fight(Cat anotherCat).
Результат каждого боя вывести на экран.
*/

public class Solution {
    public static void main(String[] args) {
        //напишите тут ваш код
        Cat mur1 = new Cat("Vasya",3,5,8);
        Cat mur2 = new Cat("Mitya",1,3,2);
        Cat mur3 = new Cat("Fedya",4,7,9);

        String Vi=" победил!";
        String Lo=" слился...";
        String Xx="";
        if (mur1.fight(mur2)) Xx=Vi; else Xx=Lo;
        System.out.println(mur1.name+" напал на "+mur2.name+" и он"+Xx);
        if (mur2.fight(mur3)) Xx=Vi; else Xx=Lo;
        System.out.println(mur2.name+" напал на "+mur3.name+" и он"+Xx);
        if (mur3.fight(mur1)) Xx=Vi; else Xx=Lo;
        System.out.println(mur3.name+" напал на "+mur1.name+" и он"+Xx);
    }

    public static class Cat {

        public static int count = 0;
        public static int fightCount = 0;

        protected String name;
        protected int age;
        protected int weight;
        protected int strength;

        public Cat(String name, int age, int weight, int strength) {
            count++;

            this.name = name;
            this.age = age;
            this.weight = weight;
            this.strength = strength;
        }

        public boolean fight(Cat anotherCat) {
            fightCount++;

            int agePlus = this.age > anotherCat.age ? 1 : 0;
            int weightPlus = this.weight > anotherCat.weight ? 1 : 0;
            int strengthPlus = this.strength > anotherCat.strength ? 1 : 0;

            int score = agePlus + weightPlus + strengthPlus;
            return score > 2; // return score > 2 ? true : false;
        }
    }
}

------------------------------------------------------------------------------------------------

public class Cat
{
    //напишите тут ваш кот
    protected void finalize() throws Throwable
    {
        System.out.println(" destroyed");
    }
}

------------------------------------------------------------------------------------------------

public class ConsoleReader
{
    public static String readString() throws Exception
    {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        return reader.readLine();
    }

    public static int readInt() throws Exception
    {
        return Integer.parseInt(readString());
    }

    public static double readDouble() throws Exception
    {
        return Double.parseDouble(readString());
    }

    public static boolean readBoolean() throws Exception
    {
        return Boolean.parseBoolean(readString());
    }
}













